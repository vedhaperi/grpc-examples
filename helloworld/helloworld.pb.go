// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helloworld.proto

/*
Package helloworld is a generated protocol buffer package.

It is generated from these files:
	helloworld.proto

It has these top-level messages:
	HelloRequest
	BackupRequest
	HelloReply
	BeatRequest
	BeatReply
*/
package helloworld

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type HelloRequest struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Ismapper   bool   `protobuf:"varint,2,opt,name=ismapper" json:"ismapper,omitempty"`
	ShardSize  int64  `protobuf:"varint,3,opt,name=shard_size,json=shardSize" json:"shard_size,omitempty"`
	Offset     int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	NoReducers int64  `protobuf:"varint,5,opt,name=no_reducers,json=noReducers" json:"no_reducers,omitempty"`
	Fail       int64  `protobuf:"varint,6,opt,name=fail" json:"fail,omitempty"`
	FileNumber int64  `protobuf:"varint,7,opt,name=file_number,json=fileNumber" json:"file_number,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HelloRequest) GetIsmapper() bool {
	if m != nil {
		return m.Ismapper
	}
	return false
}

func (m *HelloRequest) GetShardSize() int64 {
	if m != nil {
		return m.ShardSize
	}
	return 0
}

func (m *HelloRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *HelloRequest) GetNoReducers() int64 {
	if m != nil {
		return m.NoReducers
	}
	return 0
}

func (m *HelloRequest) GetFail() int64 {
	if m != nil {
		return m.Fail
	}
	return 0
}

func (m *HelloRequest) GetFileNumber() int64 {
	if m != nil {
		return m.FileNumber
	}
	return 0
}

type BackupRequest struct {
	BackupRequest  []*HelloRequest `protobuf:"bytes,1,rep,name=backup_request,json=backupRequest" json:"backup_request,omitempty"`
	ProcessedFiles []string        `protobuf:"bytes,2,rep,name=processed_files,json=processedFiles" json:"processed_files,omitempty"`
	NoMappers      int64           `protobuf:"varint,3,opt,name=no_mappers,json=noMappers" json:"no_mappers,omitempty"`
	NoReducers     int64           `protobuf:"varint,4,opt,name=no_reducers,json=noReducers" json:"no_reducers,omitempty"`
}

func (m *BackupRequest) Reset()                    { *m = BackupRequest{} }
func (m *BackupRequest) String() string            { return proto.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()               {}
func (*BackupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BackupRequest) GetBackupRequest() []*HelloRequest {
	if m != nil {
		return m.BackupRequest
	}
	return nil
}

func (m *BackupRequest) GetProcessedFiles() []string {
	if m != nil {
		return m.ProcessedFiles
	}
	return nil
}

func (m *BackupRequest) GetNoMappers() int64 {
	if m != nil {
		return m.NoMappers
	}
	return 0
}

func (m *BackupRequest) GetNoReducers() int64 {
	if m != nil {
		return m.NoReducers
	}
	return 0
}

// The response message containing the greetings
type HelloReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// The request message containing the user's name.
type BeatRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *BeatRequest) Reset()                    { *m = BeatRequest{} }
func (m *BeatRequest) String() string            { return proto.CompactTextString(m) }
func (*BeatRequest) ProtoMessage()               {}
func (*BeatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BeatRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type BeatReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *BeatReply) Reset()                    { *m = BeatReply{} }
func (m *BeatReply) String() string            { return proto.CompactTextString(m) }
func (*BeatReply) ProtoMessage()               {}
func (*BeatReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BeatReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "helloworld.HelloRequest")
	proto.RegisterType((*BackupRequest)(nil), "helloworld.BackupRequest")
	proto.RegisterType((*HelloReply)(nil), "helloworld.HelloReply")
	proto.RegisterType((*BeatRequest)(nil), "helloworld.BeatRequest")
	proto.RegisterType((*BeatReply)(nil), "helloworld.BeatReply")
}

func init() { proto.RegisterFile("helloworld.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xc7, 0x9f, 0x6d, 0xf2, 0xe4, 0x65, 0x42, 0x53, 0xb4, 0x12, 0x65, 0x09, 0x42, 0x18, 0x4b,
	0x80, 0x4f, 0x8e, 0x54, 0xc4, 0x15, 0x84, 0x91, 0xa0, 0x17, 0x50, 0xe5, 0x1c, 0x90, 0xb8, 0x58,
	0x6b, 0x7b, 0xe2, 0x58, 0x5d, 0x7b, 0x97, 0x5d, 0x47, 0x90, 0x7e, 0x33, 0x3e, 0x03, 0x17, 0x3e,
	0x12, 0xda, 0x75, 0xdc, 0xba, 0x85, 0xf6, 0x36, 0xf3, 0x9b, 0x97, 0x9d, 0xf9, 0x8f, 0x16, 0xee,
	0x6f, 0x50, 0x08, 0xf9, 0x5d, 0x6a, 0x91, 0x87, 0x4a, 0xcb, 0x46, 0x52, 0xb8, 0x22, 0xfe, 0x2f,
	0x02, 0xf7, 0x4e, 0xad, 0x1b, 0xe3, 0xb7, 0x2d, 0x9a, 0x86, 0x52, 0x18, 0xd6, 0xbc, 0x42, 0x46,
	0x3c, 0x12, 0x4c, 0x63, 0x67, 0xd3, 0x05, 0x4c, 0x4a, 0x53, 0x71, 0xa5, 0x50, 0xb3, 0x03, 0x8f,
	0x04, 0x93, 0xf8, 0xd2, 0xa7, 0x4f, 0x00, 0xcc, 0x86, 0xeb, 0x3c, 0x31, 0xe5, 0x05, 0xb2, 0x81,
	0x47, 0x82, 0x41, 0x3c, 0x75, 0x64, 0x55, 0x5e, 0x20, 0x3d, 0x86, 0x91, 0x5c, 0xaf, 0x0d, 0x36,
	0x6c, 0xe8, 0x42, 0x7b, 0x8f, 0x3e, 0x85, 0x59, 0x2d, 0x13, 0x8d, 0xf9, 0x36, 0x43, 0x6d, 0xd8,
	0xff, 0x2e, 0x08, 0xb5, 0x8c, 0xf7, 0xc4, 0xce, 0xb1, 0xe6, 0xa5, 0x60, 0x23, 0x17, 0x71, 0xb6,
	0x2d, 0x5a, 0x97, 0x02, 0x93, 0x7a, 0x5b, 0xa5, 0xa8, 0xd9, 0xb8, 0x2d, 0xb2, 0xe8, 0xb3, 0x23,
	0xfe, 0x4f, 0x02, 0x87, 0x11, 0xcf, 0xce, 0xb7, 0xaa, 0x5b, 0xe7, 0x2d, 0xcc, 0x53, 0x07, 0x12,
	0xdd, 0x12, 0x46, 0xbc, 0x41, 0x30, 0x3b, 0x61, 0x61, 0x4f, 0x96, 0xbe, 0x00, 0xf1, 0x61, 0x7a,
	0xad, 0xc1, 0x4b, 0x38, 0x52, 0x5a, 0x66, 0x68, 0x0c, 0xe6, 0x89, 0x7d, 0xca, 0xb0, 0x03, 0x6f,
	0x10, 0x4c, 0xe3, 0xf9, 0x25, 0xfe, 0x60, 0xa9, 0x15, 0xa2, 0x96, 0x49, 0xab, 0x8a, 0xe9, 0x84,
	0xa8, 0xe5, 0xa7, 0x16, 0xdc, 0x5c, 0x78, 0x78, 0x73, 0x61, 0xff, 0x05, 0xc0, 0x7e, 0x0e, 0x25,
	0x76, 0x94, 0xc1, 0xb8, 0x42, 0x63, 0x78, 0xd1, 0x5d, 0xa2, 0x73, 0xfd, 0x67, 0x30, 0x8b, 0x90,
	0x37, 0x77, 0xdc, 0xcb, 0x7f, 0x0e, 0xd3, 0x36, 0xe5, 0xce, 0x4e, 0x27, 0xbf, 0x09, 0x8c, 0x3f,
	0x6a, 0xc4, 0x06, 0x35, 0x7d, 0x03, 0x93, 0x15, 0xdf, 0xb9, 0x01, 0xe8, 0xad, 0xda, 0x2c, 0x8e,
	0xff, 0x11, 0x51, 0x62, 0xe7, 0xff, 0x47, 0x23, 0x98, 0xbf, 0xdf, 0x60, 0x76, 0x7e, 0x8a, 0x5c,
	0x37, 0x29, 0xf2, 0x86, 0x3e, 0xec, 0xe7, 0xf6, 0x26, 0x5e, 0x3c, 0xf8, 0x3b, 0xd0, 0xf6, 0x78,
	0x07, 0xb0, 0xc2, 0x3a, 0x6f, 0x0f, 0x48, 0x1f, 0x5d, 0x4b, 0xeb, 0xdf, 0xe4, 0xf6, 0x31, 0xa2,
	0x02, 0x1e, 0x97, 0x32, 0x2c, 0xb4, 0xca, 0x42, 0xfc, 0xc1, 0x2b, 0x25, 0xd0, 0xf4, 0x72, 0xa3,
	0x23, 0x97, 0xfc, 0xc5, 0xda, 0x67, 0xf6, 0x2b, 0x9c, 0x91, 0xaf, 0xaf, 0x0b, 0x29, 0x0b, 0x81,
	0x61, 0x21, 0x05, 0xaf, 0x8b, 0x50, 0xea, 0x62, 0x69, 0xcb, 0x97, 0x5d, 0xf9, 0xf2, 0xaa, 0xbc,
	0x67, 0xa6, 0x23, 0xf7, 0x95, 0x5e, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x80, 0x0d, 0xa7, 0x9e,
	0x5e, 0x03, 0x00, 0x00,
}
